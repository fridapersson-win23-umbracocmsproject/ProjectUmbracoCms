@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;

@{
    var headlineContent = Model?.Content.Value<string>("headlineContent");
    var headlineColor = Model?.Content.Value<ColorPickerValueConverter.PickedColor>("headlineColor")?.Label.ToLower() ?? null;

    //anges ingen färg för healinen sätts default till theme
    var headlineColorClass = !string.IsNullOrEmpty(headlineColor) ? $"headline-{headlineColor}" : "headline-theme";

    //formatting
    var addSpaceToTop = (Model!.Content.Value<bool>("addSpaceToTop")) ? "spacing-top" : null;
    var addSpaceToBottom = (Model!.Content.Value<bool>("addSpaceToBottom")) ? "spacing-bottom" : null;

    //custom dynamisk formatting
    var customSpacingTop = Model?.Content.Value<int>("customAddSpaceToTop") ?? 0;
    var customSpacingBottom = Model?.Content.Value<int>("customAddSpaceToBottom") ?? 0;

    var customSpacingTopClass = customSpacingTop > 0 ? $"custom-spacing-top-{customSpacingTop}" : null;
    var customSpacingBottomClass = customSpacingBottom > 0 ? $"custom-spacing-bottom-{customSpacingBottom}" : null;

}

@if(!string.IsNullOrEmpty(headlineContent)) {
    <h4 class="@headlineColorClass @addSpaceToTop @addSpaceToBottom @customAddSpaceToBottomClass @customSpacingTopClass">
        @headlineContent
    </h4>
}