@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;

@{
	var callbackFormHeader = Model.Content.Value<string>("callbackformHeader");
	var callbackFormDescription = Model.Content.Value<string>("callbackFormDescription");
	var callbackFormSubHeader = Model.Content.Value<string>("callbackFormSubHeader");

	var formBlocks = Model.Content.Value<BlockListModel>("form");
	var dropdownOptions = Model.Content.Value<IEnumerable<string>>("dropdownOptions");
}

@if(ViewData["success"] == null)
{
	@using (Html.BeginUmbracoForm("HandleSubmit", "ContactSurface", FormMethod.Post))
	{
		<div id="callback-form">
			<div class="form-headers">
				@if (callbackFormSubHeader != null)
				{
					<h6>@callbackFormSubHeader</h6>
				}
				<h2>@callbackFormHeader</h2>
				<p>@callbackFormDescription</p>

			</div>

			@foreach (var block in formBlocks!)
			{
				if (block.Content.ContentType.Alias == "formInputText")
				{
					var uniqueName = block.Content.Value<string>("uniqueName");
					var placeholderText = block.Content.Value<string>("placeholderText");
					var inputType = block.Content.Value<string>("inputType");
					var errorMessage = block.Content.Value<string>("errorMessage");

					<div class="form-input-group">
						<input id="@uniqueName" class="form-input" name="@uniqueName" type="@inputType" placeholder="@placeholderText" value="@TempData[uniqueName!]" />
						@if (TempData[$"error_{uniqueName}"] != null && (bool)TempData[$"error_{uniqueName}"]!)
						{
							<span class="form-error">@errorMessage</span>
						}
					</div>
				}
			}
			<div class="form-input-group">
				<select id="selectedOption" class="form-input" name="selectedOption">
					<option value="" disabled selected>Choose a topic</option>
					@if (dropdownOptions != null)
					{
						@foreach (var option in dropdownOptions)
						{
							<option value="@option">@option</option>
						}
					}
				</select>
				@if (TempData["error_selectedOption"] != null && (bool)TempData["error_selectedOption"]!)
				{
					<span class="form-error">Please choose a topic</span>
				}
			</div>

			<button class="btn btn-accent" type="submit">Submit</button>
		</div>
	}
}
else
{
	<div class="form-success">@ViewData["success"]</div>
}
