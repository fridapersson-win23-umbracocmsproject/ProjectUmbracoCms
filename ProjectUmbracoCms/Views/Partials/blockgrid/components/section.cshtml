@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;

@{
    //sektionstitel
    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");

    //formatting
    var addSpaceToTop = (Model!.Content.Value<bool>("addSpaceToTop")) ? "spacing-top" : "";
    var addSpaceToBottom = (Model!.Content.Value<bool>("addSpaceToBottom")) ? "spacing-bottom" : "";
    var centerContentClass = (Model!.Content.Value<bool>("centerContentOnPage")) ? "center" : "";

    //bakgrundsfärg
    var sectionBackgroundColorLabel = Model?.Content.Value<ColorPickerValueConverter.PickedColor>("sectionBackgroundColor").Label.ToLower() ?? null;
    var sectionBackgroundColorClass = (!string.IsNullOrEmpty(sectionBackgroundColorLabel)) ? $"bg-{sectionBackgroundColorLabel}" : "";

    //bakgrundsbild
    var sectionBackgroundImage = Model?.Content.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? null;
}

<section id="@sectionId" class="@addSpaceToTop addSpaceToBottom">

    @if(!string.IsNullOrEmpty(sectionBackgroundColorClass)) {
        <div class="background @sectionBackgroundImage"></div>
    }

    <div class="container @centerContentClass">
        @if(!string.IsNullOrEmpty(sectionBackgroundImage)) {
            <img class="background-image" src="@sectionBackgroundImage" alt="@sectionTitle background image" />
        }

        @await Html.GetBlockGridItemAreasHtmlAsync(Model)
    </div>
</section>