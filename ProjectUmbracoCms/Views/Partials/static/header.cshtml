@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper;
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions

@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider

@{
    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    var siteName = settings?.Value<string>("siteName") ?? "";

    var siteLogotype = settings?.Value<IPublishedContent>("siteLogotype")?.Url() ?? "";

    var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray();
}

<header>
    <div class="container">
        <a href="/" class="logotype"><img src="@siteLogotype" alt="@siteName" /></a>
        <div class="navbar">
            <nav class="nav-menu">
                @if (selection?.Length > 0)
                {
                    @foreach (var item in selection)
                    {
                        <a href="@item.Url(PublishedUrlProvider)" class="@(item.IsAncestorOrSelf(Model) ? "nav-link active" : "nav-link")" title="@item.Name">@item.Name</a>
                    }
                }
            </nav>
        </div>
        <div class="search">
            <i class="fa-regular fa-magnifying-glass"></i>
        </div>
        <button href="/" class="btn-round btn-mobile"  onclick="toggleMenu()"><i id="mobile-icon" class="fa-regular fa-bars"></i></button>
    </div>
</header>